version: '3'

services:
  ollama:
    build:
      context: ./ollama
      dockerfile: Dockerfile
    container_name: ${OLLAMA_CONTAINER_NAME}
    hostname: ${OLLAMA_HOST}
    ports:
      - "${OLLAMA_PORT}:${OLLAMA_PORT}"
    volumes:
      - ollama_data:/root/.ollama
    restart: unless-stopped
    networks:
      - langflow-network
    environment:
      - OLLAMA_HOST=${OLLAMA_HOST}
      - OLLAMA_PORT=${OLLAMA_PORT}
      - OLLAMA_MODELS=${OLLAMA_MODELS}
      - OLLAMA_ALLOW_DOWNLOAD=${OLLAMA_ALLOW_DOWNLOAD}
      - OLLAMA_ALLOW_UPLOAD=${OLLAMA_ALLOW_UPLOAD}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${OLLAMA_PORT}/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 3

  qdrant:
    image: qdrant/qdrant:latest
    container_name: ${QDRANT_CONTAINER_NAME}
    hostname: ${QDRANT_HOST}
    ports:
      - "${QDRANT_PORT}:${QDRANT_PORT}"
      - "${QDRANT_INTERNAL_PORT}:${QDRANT_INTERNAL_PORT}"
    volumes:
      - qdrant_data:/qdrant/storage
    restart: unless-stopped
    networks:
      - langflow-network
    environment:
      - QDRANT_ALLOW_CORS=${QDRANT_ALLOW_CORS}
      - QDRANT_TELEMETRY_DISABLED=${QDRANT_TELEMETRY_DISABLED}
      - QDRANT_LOG_LEVEL=${QDRANT_LOG_LEVEL}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${QDRANT_PORT}/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  langflow:
    build:
      context: ./langflow
      dockerfile: Dockerfile
    container_name: ${LANGFLOW_CONTAINER_NAME}
    hostname: ${LANGFLOW_HOST}
    ports:
      - "${LANGFLOW_PORT}:${LANGFLOW_PORT}"
    volumes:
      - langflow_data:/root/.langflow
    restart: unless-stopped
    networks:
      - langflow-network
    environment:
      - LANGFLOW_HOST=${LANGFLOW_HOST}
      - LANGFLOW_PORT=${LANGFLOW_PORT}
      - LANGFLOW_AUTO_RELOAD=${LANGFLOW_AUTO_RELOAD}
      - LANGFLOW_DEV=${LANGFLOW_DEV}
      - LANGFLOW_DATABASE_URL=${LANGFLOW_DATABASE_URL}
      - LANGFLOW_CACHE=${LANGFLOW_CACHE}
      - LANGFLOW_EMBEDDING_MODEL_ENDPOINT=${OLLAMA_INTERNAL_URL}
      - LANGFLOW_ALLOWED_ORIGINS=${LANGFLOW_ALLOWED_ORIGINS}
      - LANGFLOW_REMOVE_EXAMPLE_FLOWS=${LANGFLOW_REMOVE_EXAMPLE_FLOWS}
    depends_on:
      - ollama
      - qdrant
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:${LANGFLOW_PORT}/health" ]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ${BACKEND_CONTAINER_NAME}
    hostname: ${BACKEND_HOST}
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    volumes:
      - backend_data:${BACKEND_UPLOAD_DIR}
    restart: unless-stopped
    networks:
      - langflow-network
    environment:
      - SERVER_HOST=${BACKEND_HOST}
      - SERVER_PORT=${BACKEND_PORT}
      - EXTERNAL_LANGFLOW_URL=${EXTERNAL_LANGFLOW_URL}
      - EXTERNAL_OLLAMA_URL=${EXTERNAL_OLLAMA_URL}
      - EXTERNAL_QDRANT_URL=${EXTERNAL_QDRANT_URL}
      - INTERNAL_OLLAMA_URL=${OLLAMA_INTERNAL_URL}
      - INTERNAL_QDRANT_URL=${QDRANT_INTERNAL_URL}
      - BACKEND_LOG_LEVEL=${BACKEND_LOG_LEVEL}
      - BACKEND_ALLOW_ORIGINS=${BACKEND_ALLOW_ORIGINS}
      - BACKEND_MAX_FILE_SIZE=${BACKEND_MAX_FILE_SIZE}
      - BACKEND_DEFAULT_EMBEDDING_MODEL=${BACKEND_DEFAULT_EMBEDDING_MODEL}
    depends_on:
      - ollama
      - qdrant
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:${BACKEND_PORT}/health" ]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ${FRONTEND_CONTAINER_NAME}
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - REACT_APP_LANGFLOW_API=${REACT_APP_LANGFLOW_API}
      - REACT_APP_BACKEND_API=${REACT_APP_BACKEND_API}
      - NODE_ENV=${NODE_ENV}
      - WDS_SOCKET_HOST=${WDS_SOCKET_HOST}
      - CHOKIDAR_USEPOLLING=${CHOKIDAR_USEPOLLING}
      - FAST_REFRESH=${FAST_REFRESH}
      - BROWSER=${BROWSER}
      - REACT_APP_VERSION=${REACT_APP_VERSION}
      - REACT_APP_DEFAULT_FLOW_ID=${REACT_APP_DEFAULT_FLOW_ID}
    networks:
      - langflow-network
    depends_on:
      - backend
      - langflow

volumes:
  ollama_data:
  qdrant_data:
  langflow_data:
  backend_data:

networks:
  langflow-network:
    driver: bridge