version: '3'

services:
  ollama:
    build:
      context: ./ollama
      dockerfile: Dockerfile
    container_name: ollama
    hostname: ollama.local
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    restart: unless-stopped
    networks:
      - langflow-network
    env_file:
      - ./ollama/.env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 3

  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant
    hostname: qdrant.local
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    restart: unless-stopped
    networks:
      - langflow-network
    environment:
      - QDRANT_ALLOW_CORS=true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  langflow:
    build:
      context: ./langflow
      dockerfile: Dockerfile
    container_name: langflow
    hostname: langflow.local
    ports:
      - "7860:7860"
    volumes:
      - langflow_data:/root/.langflow
    restart: unless-stopped
    networks:
      - langflow-network
    environment:
      - LANGFLOW_HOST=0.0.0.0
      - LANGFLOW_PORT=7860
    depends_on:
      - ollama
      - qdrant
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:7860/health" ]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    hostname: backend.local
    ports:
      - "8000:8000"
    volumes:
      - backend_data:/app/uploads
    restart: unless-stopped
    networks:
      - langflow-network
    env_file:
      - ./backend/.env
    depends_on:
      - ollama
      - qdrant
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/health" ]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - REACT_APP_LANGFLOW_API=http://localhost:7860
      - REACT_APP_BACKEND_API=http://localhost:8000
      - NODE_ENV=development
      - WDS_SOCKET_HOST=0.0.0.0
      - CHOKIDAR_USEPOLLING=true
    networks:
      - langflow-network

volumes:
  ollama_data:
  qdrant_data:
  langflow_data:
  backend_data:

networks:
  langflow-network:
    driver: bridge